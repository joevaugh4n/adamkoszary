---
import Post from "../../layouts/Post.astro";
import Tag from "../../components/Tag.astro";
import { Image } from "astro:assets";
import { fetchPosts, fetchTags } from "../../lib/wordpress";

export async function getStaticPaths() {
  const posts = await fetchPosts();
  const tags = await fetchTags();

  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post, tags },
  }));
}

const { post, tags } = Astro.props;

// Create a map of tag IDs to tag names
const tagMap = new Map<number, string>(
  Object.values(tags).map((tag) => [tag.id, tag.name])
);

// Format date
function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString("en-US", {
    year: "numeric",
    month: "long",
    day: "numeric",
  });
}
---

<Post title={post.title.rendered} description={post.excerpt.rendered}>
  <article class="max-w-3xl mx-auto py-8">
    {
      post.featured_media?.source_url && (
        <div class="mb-8 relative" style={{ paddingBottom: "56.25%" }}>
          <Image
            inferSize
            src={post.featured_media.source_url}
            alt={post.title.rendered}
            class="absolute inset-0 w-full h-full object-cover rounded-sm" loading="eager"
          />
        </div>
      )
    }

    <hgroup>
      <h1 class="text-4xl uppercase mb-4">{post.title.rendered}</h1>
      <p class="text-gray-600 dark:text-white mb-4">{formatDate(post.date)}</p>

      <div class="mb-6 flex gap-2 flex-wrap">
        {
          post.tags.map((tagId) => {
            const tagName = tagMap.get(tagId);
            return tagName ? <Tag tag={tagName} /> : null;
          })
        }
      </div>
    </hgroup>

    <div
      class="prose prose-lg dark:prose-invert"
      set:html={post.content.rendered}
    />
  </article>
</Post>
