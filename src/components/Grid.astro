---
import { Image } from "astro:assets";
import { fetchPageBySlug } from "../lib/wordpress";
import H2 from "./H2.astro";

interface Props {
  /** The section title, e.g. 'Principles, What I Do'. Renders in uppercase. */
  title: string;
  /** The section hero image. */
  image?: ImageMetadata | undefined;
  /** Section hero image alt text. */
  alt?: string | undefined;
  /** Do you want a background colour? */
  background?: boolean;
  /** If section appears at the top of the page, use 'eager'. Else, use 'lazy' or simply ignore to set lazy loading automatically. */
  loading?: "eager" | "lazy";
  /** Slug for WordPress page. For example: 'principles' would load content from 'https://test113736.wordpress.com/principles/' */
  slug?: string;
  // Whether the image or text should appear first
  order?: "image-first" | "text-first";
  // Render bottom border. Defaults to true
  border?: boolean;
  // Anchor, used for page links
  anchor: string;
}

const {
  title,
  image,
  alt,
  background,
  loading = "lazy",
  slug,
  order = "image-first",
  border = true,
  anchor,
} = Astro.props;

let content;
let error;
if (slug) {
  try {
    const page = await fetchPageBySlug(slug);
    content = page ? page.content.rendered : null;
  } catch (e) {
    error = e;
    console.error(`Error fetching content for slug "${slug}":`, e);
  }
}
---

<section
  id={anchor}
  class={`${image ? "grid md:grid-cols-[1fr_2fr]" : "md:flex md:justify-center"} 
    py-12 my-6 md:gap-x-12 gap-y-8 
    ${background ? "bg-slate-100 dark:bg-slate-700 py-16 px-4 sm:px-6 lg:px-8 rounded-lg" : "border-b-2 border-gray-300 dark:border-gray-600"}
  `}
>
  <div
    class={`image-container ${order === "text-first" ? "md:order-last" : ""} 
      ${background ? "md:pr-0" : "md:px-6"}`}
  >
    {
      image && alt && (
        <Image class="w-full rounded" alt={alt} src={image} loading={loading} />
      )
    }
  </div>

  <article
    class={`${order === "text-first" ? "md:order-first" : ""} 
      ${background ? "md:pl-0" : "md:px-6"}
      text-black dark:text-white
      flex flex-col`}
  >
    <H2 title={title} />
    <div
      class={`prose dark:prose-invert text-pretty 
        prose-p:leading-relaxed prose-p:my-3 
        prose-ul:my-3 prose-ul:pl-5 
        text-black dark:text-white`}
    >
      {
        error && (
          <p class="text-red-500">
            Error loading content. Please try again later.
          </p>
        )
      }
      {content ? <div set:html={content} /> : <slot />}
    </div>
  </article>
</section>
