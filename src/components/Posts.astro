---
import Post from "./Post.astro";
import Tag from "./Tag.astro";
import { fetchPosts, fetchTags, type PostProps, type TagProps } from "../lib/wordpress";

// Fetch data and assign to variables
let posts: PostProps[] = [];
let tags: { [key: number]: TagProps } = {};
let error: unknown = null;

try {
  [posts, tags] = await Promise.all([fetchPosts(), fetchTags()]);
} catch (err: any) {
  error = err.message;
}

// Create a map of tag IDs to tag names
const tagMap = new Map<number, string>(
  Object.values(tags).map((tag) => [tag.id, tag.name])
);

// Group posts by tag
const postsByTag = new Map<string, PostProps[]>();
posts.forEach((post) => {
  post.tags.forEach((tagId) => {
    const tagName = tagMap.get(tagId);
    if (tagName) {
      if (!postsByTag.has(tagName)) {
        postsByTag.set(tagName, []);
      }
      postsByTag.get(tagName)?.push(post);
    }
  });
});
---

<section id="tag-navigation" class="py-4">
  <h2 class="text-3xl mb-2 uppercase">Tags</h2>
  <div class="flex flex-wrap gap-2">
    {Object.values(tags).map((tag: TagProps) => (
      <a href={`/tags/${tag.name}`} class="bg-gray-200 px-3 py-1 rounded font-mono">
        {tag.name}
      </a>
    ))}
  </div>
</section>

<section id="posts" class="py-8 gap-x-16 gap-y-6 border-b-2 border-t-2">
  <h2 class="text-4xl mb-4 uppercase">Posts</h2>
  {error ? (
    <p class="text-red-500">Failed to load posts and tags: {error}</p>
  ) : (
    <div class="grid lg:grid-cols-2 gap-x-4 gap-y-8">
      {posts.map((post: PostProps) => (
        <Post
          date={post.date}
          title={post.title.rendered}
          slug={post.slug}
          prose={post.excerpt.rendered}
          tags={post.tags.map((tagId) => tagMap.get(tagId) || "")}
        />
      ))}
    </div>
  )}
</section>